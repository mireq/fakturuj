#!/bin/bash
set -e

DIRNAME="`pwd`/`dirname ${BASH_SOURCE:-$0}`"
DIRNAME=`cd "${DIRNAME}/..";pwd`
cd $DIRNAME
export PYTHONPATH=$DIRNAME

SKIP_COMPILE=
SKIP_INSTALL=

while [[ $# -gt 0 ]]
do
key="$1"
case $key in
	--skip-compile)
	SKIP_COMPILE=YES
	shift
	;;
	--skip-install)
	SKIP_INSTALL=YES
	shift
	;;
	--)
	shift
	COMPILE_ARGS=$@
	while [[ $# -gt 0 ]]
	do
		shift
	done
	;;
*)
	echo "Wrong argument $key"
	shift
	exit -1
	;;
esac
done



declare -p COMPILE_ARGS &>/dev/null || HAS_NO_COMPILE_ARGS=1

if [ -n "$HAS_NO_COMPILE_ARGS" ]; then
	COMPILE_ARGS="--upgrade"
fi


VIRTUALENV_DIR=${VIRTUALENV_DIR:-~/.virtualenvs}
PYTHON_INSTALL_DIR=${PYTHON_INSTALL_DIR:-/usr/bin}

EXTRA_INSTALL_REQUIREMENTS=""
EXTRA_COMPILE_OPTS="-v --no-emit-index-url --annotation-style line"

if [[ -z $PYTHON_ENVIRONMENTS ]]
then
	echo "PYTHON_ENVIRONMENTS variable not set"
	echo "example: PYTHON_ENVIRONMENTS=\"3.7 3.8 3.9\""
	exit -1
fi

read -a PYTHON_ENVIRONMENTS <<< $PYTHON_ENVIRONMENTS

PYTHON_ENVIRONMENTS=$(printf ",%s" "${PYTHON_ENVIRONMENTS[@]}")
PYTHON_ENVIRONMENTS=${PYTHON_ENVIRONMENTS:1}

current_python=`python -c "import sys; v=sys.version_info; print(f'{v.major}.{v.minor}')"`
virtualenv_dir="$VIRTUALENV_DIR/py$current_python"

if [ -z $SKIP_COMPILE ]
then
	pip_compile_universal $PYTHON_ENVIRONMENTS requirements.in $EXTRA_COMPILE_OPTS $COMPILE_ARGS
fi

if [[ -f "requirements.dev.txt" ]]
then
	EXTRA_INSTALL_REQUIREMENTS="-r requirements.dev.txt"
fi

if [ -z $SKIP_INSTALL ]
then
	pip install -r requirements.txt $EXTRA_INSTALL_REQUIREMENTS
fi
